{"version":3,"sources":["constants.js","api/utisl.js","api/userApi/index.js","components/Users/constants.js","components/Users/UsersTable/Actions/index.jsx","components/Users/UsersTable/index.jsx","common/Formik/Select/index.jsx","common/Formik/Input/index.jsx","components/Users/UserForm/FormContainer/Buttons/index.jsx","components/Users/UserForm/FormContainer/index.jsx","components/Users/UserForm/index.jsx","components/Users/UserForm/converter.js","components/NotFound/index.jsx","components/Users/index.jsx","api/carsApi/index.js","components/Cars/constants.js","components/Cars/CarsTable/Actions/index.jsx","components/Cars/CarsTable/index.jsx","components/Cars/CarForm/CarContainer/Buttons/index.jsx","components/Cars/CarForm/CarContainer/index.jsx","components/Cars/CarForm/index.jsx","components/Cars/CarForm/converter.js","components/Cars/index.jsx","components/App/index.jsx","components/Root/index.jsx","index.js"],"names":["MODE","wait","ms","Promise","resolve","setTimeout","createGetId","initialId","getTimestamp","date","Date","now","getFullYear","getMonth","0","1","2","3","4","5","6","getDay","getHours","getMinutes","throwError","id","Error","getId","data","length","api","getUsers","console","log","getUser","user","find","u","createUser","newUser","timestamp","push","editUser","index","findIndex","deleteUser","splice","getRoles","ROLES","USERNAME","ROLE","AGE","INITIAL_STATE","Actions","url","useRouteMatch","history","useHistory","redirect","mode","className","onClick","UsersTable","users","setUsers","useEffect","userApi","then","to","map","Select","name","label","value","disabled","validate","useField","field","role","component","Input","type","required","placeholder","Buttons","isSubmitting","useFormikContext","FormContainer","initialValues","onSubmit","roles","trim","UserForm","useParams","Number","prevUsers","catch","err","window","alert","message","useState","setRoles","handleSubmit","values","a","payload","error","getInitialValues","NotFound","Users","path","exact","getCars","getCar","car","c","createCar","newCar","editCar","deleteCar","getGearbox","GEARBOXES","NAME","MODEL","GEARBOX","CarsTable","cars","setCars","carApi","CarContainer","gearboxes","CarForm","prevCars","setGearboxes","Cars","App","from","Root","children","basename","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.f28dc4e0.chunk.js","sourcesContent":["export const MODE = {\n  VIEW: 'view',\n  CREATE: 'create',\n  EDIT: 'edit',\n  CLONE: 'clone',\n  DELETE: 'delete'\n};\n","export const wait = (ms = 800) =>\n  new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n\nexport const createGetId = initialId => () => ++initialId;\n\nexport const getTimestamp = () => {\n  const days = {\n    0: 'Sunday',\n    1: 'Monday',\n    2: 'Tuesday',\n    3: 'Wednesday',\n    4: 'Thursday',\n    5: 'Friday',\n    6: 'Saturday'\n  };\n  const date = new Date(Date.now());\n  return `${date.getFullYear()}-${date.getMonth() + 1}-${days[date.getDay()]} ${date.getHours()}:${date.getMinutes()}`;\n};\n\nexport const throwError = id => {\n  throw new Error(`Record with ID ${id} does not exist`);\n};\n","import { wait, createGetId, getTimestamp, throwError } from '../utisl';\nimport data from './db';\n\nconst getId = createGetId(data.length);\n\nconst api = {\n  // GET /users\n  async getUsers() {\n    await wait(1000);\n\n    console.log('GET /users', data);\n    return data;\n  },\n  // GET /users/:id\n  async getUser(id) {\n    await wait();\n\n    const user = data.find(u => u.id === id);\n\n    if (user) {\n      console.log(`GET /users/${user.id}`, user);\n      return user;\n    } else {\n      throwError(id);\n    }\n  },\n  // POST /users\n  async createUser(user) {\n    await wait();\n\n    const newUser = {\n      ...user,\n      id: getId(),\n      timestamp: getTimestamp()\n\n    };\n\n    data.push(newUser);\n\n    console.log('POST /users', newUser);\n    return newUser;\n  },\n  // PUT /users\n  async editUser(user) {\n    await wait();\n\n    const index = data.findIndex(u => u.id === user.id);\n\n    if (~index) {\n      data[index] = {\n        ...user,\n        timestamp: getTimestamp()\n      };\n\n      console.log('PUT /users', data[index]);\n      return data[index];\n    } else {\n      throwError(user.id);\n    }\n  },\n  // DELETE /users\n  async deleteUser(user) {\n    await wait();\n\n    const index = data.findIndex(u => u.id === user.id);\n\n    if (~index) {\n      console.log('DELETE /users', user);\n      return data.splice(index, 1);\n    } else {\n      throwError(user.id);\n    }\n  },\n  // GET /roles\n  async getRoles() {\n    await wait();\n    const ROLES = ['user', 'super-user', 'admin'];\n\n    console.log('GET /roles', ROLES);\n    return ROLES;\n  }\n};\n\nexport default api;\n","export const ID = 'id';\nexport const USERNAME = 'username';\nexport const ROLE = 'role';\nexport const TIMESTAMP = 'timestamp';\nexport const AGE = 'age';\n\nexport const INITIAL_STATE = {\n  [USERNAME]: '',\n  [ROLE]: '',\n  [AGE]: 0\n};\n\n","import { useRouteMatch, useHistory } from 'react-router-dom';\nimport './styles.scss';\nimport { MODE } from '../../../../constants';\n\nfunction Actions({ id }) {\n  const { url } = useRouteMatch();\n  const history = useHistory();\n\n  const redirect = mode => () => {\n    history.push(`${url}/user/${mode}/${id}`);\n  };\n\n  return (\n    <div className='Actions'>\n      <button onClick={redirect(MODE.VIEW)} className='viewBtn button'>View</button>\n      {' '}\n      <button onClick={redirect(MODE.EDIT)} className='editBtn button'>Edit</button>\n      {' '}\n      <button onClick={redirect(MODE.CLONE)} className='cloneBtn button'>Clone</button>\n      {' '}\n      <button onClick={redirect(MODE.DELETE)} className='deleteBtn button'>Delete</button>\n    </div>\n  );\n}\n\nexport default Actions;\n","import { useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\n\nimport userApi from '../../../api/userApi';\nimport { MODE } from '../../../constants';\nimport { ID, USERNAME, ROLE, TIMESTAMP, AGE } from '../constants';\nimport Actions from './Actions';\nimport './index.scss';\n\nfunction UsersTable({ users, setUsers }) {\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    userApi.getUsers().then(setUsers);\n  }, [setUsers]);\n\n  return (\n    <div className='UsersTable'>\n      <Link to={`${url}/user/${MODE.CREATE}`}><p className='createBtn'>Create User</p></Link>\n\n      <table>\n        <thead>\n        <tr>\n          <th>ID</th>\n          <th>Username</th>\n          <th>Age</th>\n          <th>Role</th>\n          <th>Last Updated At</th>\n          <th>Actions</th>\n        </tr>\n        </thead>\n        <tbody>\n        {users.map(user => (\n          <tr key={user[ID]}>\n            <td>{user[ID]}</td>\n            <td>{user[USERNAME]}</td>\n            <td>{user[AGE]}</td>\n            <td>{user[ROLE]}</td>\n            <td>{user[TIMESTAMP]}</td>\n            <td>\n              <Actions id={user[ID]} />\n            </td>\n          </tr>\n        ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default UsersTable;\n","import { useField, ErrorMessage } from 'formik';\nimport './styles.scss';\n\nfunction Select({ name, label, value, disabled = false, validate }) {\n  const [field] = useField({ name, validate });\n  return (\n    <div className='select'>\n      <label>\n        <div>{label}</div>\n        <select disabled={disabled} {...field} className='options'>\n          <option />\n          {value.map((role, index) => {\n            return <option key={index}>{role}</option>;\n          })}\n        </select>\n      </label>\n\n      <ErrorMessage name={name} className='error' component='div' />\n    </div>\n  );\n}\n\nexport default Select;","import { useField, ErrorMessage } from 'formik';\nimport './styles.scss';\n\nfunction Input({ name, label, validate, type = 'text', disabled = false, required }) {\n  const [field] = useField({ name, validate });\n\n  return (\n    <div className='Input'>\n      <label>\n        <div>{label}</div>\n        <input type={type} disabled={disabled} {...field} className='info' placeholder={label} />\n      </label>\n\n      <ErrorMessage name={name} className='error' component='div' />\n    </div>\n  );\n}\n\nexport default Input;\n","import { useHistory } from 'react-router-dom';\nimport { useFormikContext } from 'formik';\nimport './buttons.scss';\nimport { MODE } from '../../../../../constants';\n\nfunction Buttons({ mode }) {\n  const history = useHistory();\n  const { isSubmitting } = useFormikContext();\n\n  return (\n    <div>\n      {(mode === MODE.CREATE || mode === MODE.EDIT) && (\n        <button type='submit' disabled={isSubmitting} className='submitBtn'>\n          Save\n        </button>\n      )}\n      {\n        (mode === MODE.CLONE) && (\n          <button type='submit' disabled={isSubmitting} className='submitBtn'>\n            Clone\n          </button>\n        )\n      }\n      {\n        (mode === MODE.DELETE) && (\n          <button type='submit' disabled={isSubmitting} className='submitBtn'>\n            Delete\n          </button>\n        )\n      }\n\n      <button type='button' onClick={() => history.push('/users')} className='submitBtn'>\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default Buttons;\n","import { Formik, Form } from 'formik';\nimport Select from '../../../../common/Formik/Select';\nimport Input from '../../../../common/Formik/Input';\nimport { MODE } from '../../../../constants';\nimport { ROLE, USERNAME, AGE } from '../../constants';\nimport Buttons from './Buttons';\nimport './form.scss';\n\nfunction FormContainer({ initialValues, onSubmit, mode, roles, required }) {\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      <Form>\n        <div className='form'>\n          <Input name={USERNAME} label='Username' disabled={mode === MODE.VIEW || mode === MODE.DELETE} required={required}\n                 validate={value => {\n                   if (value.trim() === '') {\n                     return `Please, enter your name:)`;\n                   }\n                 }}\n          />\n          <Input name={AGE} label='Age' disabled={mode === MODE.VIEW || mode === MODE.DELETE} type='number' required={required}\n                 validate={value => {\n                   if (value <= 15 || value >= 111) {\n                     return `Not allowed age!`;\n                   }\n                 }}\n          />\n          <Select name={ROLE} label='Role' disabled={mode === MODE.VIEW || mode === MODE.DELETE} value={roles}\n                  validate={value => {\n                    if (!value) {\n                      return `Field is required`;\n                    }\n                  }}\n          />\n\n          <br />\n\n          <Buttons mode={mode} />\n        </div>\n      </Form>\n    </Formik>\n  );\n}\n\nexport default FormContainer;\n","import { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport userApi from '../../../api/userApi';\nimport { MODE } from '../../../constants';\nimport { ID } from '../constants';\nimport FormContainer from './FormContainer';\nimport { getInitialValues, getRequestPayload } from './converter';\n\nfunction UserForm({ users, setUsers }) {\n  const { mode, id } = useParams();\n  const history = useHistory();\n\n  const user = users.find(user => user.id === Number(id));\n\n  useEffect(() => {\n    if (mode === MODE.VIEW || mode === MODE.EDIT) {\n      if (!user) {\n        userApi\n          .getUser(Number(id))\n          .then(user => setUsers(prevUsers => [...prevUsers, user]))\n          .catch(err => window.alert(err.message));\n      }\n    }\n  }, [id, mode, user, setUsers]);\n\n  const [roles, setRoles] = useState([]);\n  useEffect(() => {\n    userApi.getRoles().then(setRoles);\n  }, [setUsers]);\n\n  const handleSubmit = async values => {\n    try {\n      const payload = getRequestPayload(values);\n\n      switch (mode) {\n        case MODE.CREATE:\n          await userApi.createUser(payload);\n          break;\n        case MODE.EDIT:\n          await userApi.editUser(payload);\n          break;\n        case MODE.CLONE:\n          await userApi.createUser(payload);\n          break;\n        case MODE.DELETE:\n          await userApi.deleteUser(payload);\n          break;\n        default:\n          console.error(`Failed to execute this request for ${mode} mode`);\n      }\n    } catch (err) {\n      window.alert(err.message);\n    }\n\n    history.push('/users');\n  };\n\n  const initialValues = getInitialValues(user);\n\n  return (\n    <FormContainer\n      key={`${mode}:${initialValues[ID]}`}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      mode={mode}\n      roles={roles}\n      required={true}\n    />\n  );\n}\n\nexport default UserForm;\n","import { INITIAL_STATE } from '../constants';\n\nexport const getInitialValues = user => (user ? user : INITIAL_STATE);\n\nexport const getRequestPayload = values => values;","import React from 'react';\nimport './styles.scss';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1>Not Found</h1>\n      <h3>Error 404</h3>\n    </div>\n  );\n}\n\nexport default NotFound;","import { useState } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport { MODE } from '../../constants';\nimport UsersTable from './UsersTable';\nimport UserForm from './UserForm';\nimport NotFound from '../NotFound';\n\nfunction Users() {\n  const { path } = useRouteMatch();\n  const [users, setUsers] = useState([]);\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path={path}>\n          <UsersTable users={users} setUsers={setUsers} />\n        </Route>\n\n        <Route exact\n               path={`${path}/user/:mode(${MODE.VIEW}|${MODE.CREATE}|${MODE.EDIT}|${MODE.CLONE}|${MODE.DELETE})/:id?`}>\n          <UserForm users={users} setUsers={setUsers} />\n        </Route>\n\n        <Route path='*'><NotFound /></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Users;\n","import { wait, createGetId, getTimestamp, throwError } from '../utisl';\nimport data from './db';\n\nconst getId = createGetId(data.length);\n\nconst api = {\n  // GET /cars\n  async getCars() {\n    await wait(1000);\n\n    console.log('GET /cars', data);\n    return data;\n  },\n  // GET /cars/:id\n  async getCar(id) {\n    await wait();\n\n    const car = data.find(c => c.id === id);\n\n    if (car) {\n      console.log(`GET /cars/${car.id}`, car);\n      return car;\n    } else {\n      throwError(id);\n    }\n  },\n  // POST /cars\n  async createCar(car) {\n    await wait();\n\n    const newCar = {\n      ...car,\n      id: getId(),\n      timestamp: getTimestamp()\n\n    };\n\n    data.push(newCar);\n\n    console.log('POST /cars', newCar);\n    return newCar;\n  },\n  // PUT /cars\n  async editCar(car) {\n    await wait();\n\n    const index = data.findIndex(c => c.id === car.id);\n\n    if (~index) {\n      data[index] = {\n        ...car,\n        timestamp: getTimestamp()\n      };\n\n      console.log('PUT /car', data[index]);\n      return data[index];\n    } else {\n      throwError(car.id);\n    }\n  },\n  // DELETE /users\n  async deleteCar(car) {\n    await wait();\n\n    const index = data.findIndex(c => c.id === car.id);\n\n    if (~index) {\n      console.log('DELETE /car', car);\n      return data.splice(index, 1);\n    } else {\n      throwError(car.id);\n    }\n  },\n  // GET /roles\n  async getGearbox() {\n    await wait();\n    const GEARBOXES = ['manual', 'auto'];\n\n    console.log('GET /gearboxes', GEARBOXES);\n    return GEARBOXES;\n  }\n};\n\nexport default api;","export const ID = 'id';\nexport const NAME = 'name';\nexport const MODEL = 'model';\nexport const TIMESTAMP = 'timestamp';\nexport const GEARBOX = 'gearbox';\n\nexport const INITIAL_STATE = {\n  [NAME]: '',\n  [MODEL]: '',\n  [GEARBOX]: ''\n};\n","import { useRouteMatch, useHistory } from 'react-router-dom';\n\nimport { MODE } from '../../../../constants';\n\nfunction Actions({ id }) {\n  const { url } = useRouteMatch();\n  const history = useHistory();\n\n  const redirect = mode => () => {\n    history.push(`${url}/car/${mode}/${id}`);\n  };\n\n  return (\n    <div className='Actions'>\n      <button onClick={redirect(MODE.VIEW)} className='viewBtn button'>View</button>\n      {' '}\n      <button onClick={redirect(MODE.EDIT)} className='editBtn button'>Edit</button>\n      {' '}\n      <button onClick={redirect(MODE.CLONE)} className='cloneBtn button'>Clone</button>\n      {' '}\n      <button onClick={redirect(MODE.DELETE)} className='deleteBtn button'>Delete</button>\n    </div>\n  );\n}\n\nexport default Actions;","import { useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\n\nimport carApi from '../../../api/carsApi';\nimport { MODE } from '../../../constants';\nimport { NAME, MODEL, TIMESTAMP, GEARBOX, ID } from '../constants';\nimport Actions from './Actions';\nimport './index.scss';\n\n\nfunction CarsTable({ cars, setCars }) {\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    carApi.getCars().then(setCars);\n  }, [setCars]);\n\n  return (\n    <div className='CarsTable'>\n      <Link to={`${url}/car/${MODE.CREATE}`}><p className='createBtn'>Create Car</p></Link>\n\n      <table>\n        <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Model</th>\n          <th>Gearbox</th>\n          <th>Last Updated At</th>\n          <th>Actions</th>\n        </tr>\n        </thead>\n        <tbody>\n        {cars.map(car => (\n          <tr key={car[ID]}>\n            <td>{car[ID]}</td>\n            <td>{car[NAME]}</td>\n            <td>{car[MODEL]}</td>\n            <td>{car[GEARBOX]}</td>\n            <td>{car[TIMESTAMP]}</td>\n            <td>\n              <Actions id={car[ID]} />\n            </td>\n          </tr>\n        ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default CarsTable;","import { useHistory } from 'react-router-dom';\nimport { useFormikContext } from 'formik';\nimport './buttons.scss';\nimport { MODE } from '../../../../../constants';\n\nfunction Buttons({ mode }) {\n  const history = useHistory();\n  const { isSubmitting } = useFormikContext();\n\n  return (\n    <div>\n      {(mode === MODE.CREATE || mode === MODE.EDIT) && (\n        <button type='submit' disabled={isSubmitting} className='submitBtn'>\n          Save\n        </button>\n      )}\n      {\n        (mode === MODE.CLONE) && (\n          <button type='submit' disabled={isSubmitting} className='submitBtn'>\n            Clone\n          </button>\n        )\n      }\n      {\n        (mode === MODE.DELETE) && (\n          <button type='submit' disabled={isSubmitting} className='submitBtn'>\n            Delete\n          </button>\n        )\n      }\n\n      <button type='button' onClick={() => history.push('/cars')} className='submitBtn'>\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default Buttons;","import { Formik, Form } from 'formik';\nimport Input from '../../../../common/Formik/Input';\nimport { MODE } from '../../../../constants';\nimport { MODEL, NAME, GEARBOX } from '../../constants';\nimport Buttons from './Buttons';\nimport Select from '../../../../common/Formik/Select';\nimport './form.scss';\n\nfunction CarContainer({ initialValues, onSubmit, mode, gearboxes, required }) {\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      <Form>\n        <div className={'form'}>\n          <Input name={NAME} label='Name' disabled={mode === MODE.VIEW || mode === MODE.DELETE} required={required}\n                 validate={value => {\n                   if (value.trim() === '') {\n                     return `Please, enter cars name:)`;\n                   }\n                 }}\n          />\n          <Input name={MODEL} label='Model' disabled={mode === MODE.VIEW || mode === MODE.DELETE} required={required}\n                 validate={value => {\n                   if (value.trim() === '') {\n                     return `Please, enter cars model:)`;\n                   }\n                 }}\n          />\n          <Select name={GEARBOX} label='Gearbox' disabled={mode === MODE.VIEW || mode === MODE.DELETE} value={gearboxes}\n                  validate={value => {\n                    if (!value) {\n                      return `Field is required`;\n                    }\n                  }}\n          />\n\n          <br />\n          <Buttons mode={mode} />\n        </div>\n      </Form>\n    </Formik>\n  );\n}\n\nexport default CarContainer;","import { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport carApi from '../../../api/carsApi';\nimport { MODE } from '../../../constants';\nimport { ID } from '../constants';\nimport CarContainer from './CarContainer';\nimport { getInitialValues, getRequestPayload } from './converter';\n\n\nfunction CarForm({ cars, setCars }) {\n  const { mode, id } = useParams();\n  const history = useHistory();\n\n  const car = cars.find(car => car.id === Number(id));\n\n  useEffect(() => {\n    if (mode === MODE.VIEW || mode === MODE.EDIT) {\n      if (!car) {\n        carApi\n          .getCar(Number(id))\n          .then(car => setCars(prevCars => [...prevCars, car]))\n          .catch(err => window.alert(err.message));\n      }\n    }\n  }, [id, mode, cars, setCars]);\n\n  const [gearboxes, setGearboxes] = useState([]);\n  useEffect(() => {\n    carApi.getGearbox().then(setGearboxes);\n  }, [setCars]);\n\n  const handleSubmit = async values => {\n    try {\n      const payload = getRequestPayload(values);\n\n      switch (mode) {\n        case MODE.CREATE:\n          await carApi.createCar(payload);\n          break;\n        case MODE.EDIT:\n          await carApi.editCar(payload);\n          break;\n        case MODE.CLONE:\n          await carApi.createCar(payload);\n          break;\n        case MODE.DELETE:\n          await carApi.deleteCar(payload);\n          break;\n        default:\n          console.error(`Failed to execute this request for ${mode} mode`);\n      }\n    } catch (err) {\n      window.alert(err.message);\n    }\n\n    history.push('/cars');\n  };\n\n  const initialValues = getInitialValues(car);\n\n  return (\n    <CarContainer\n      key={`${mode}:${initialValues[ID]}`}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      mode={mode}\n      gearboxes={gearboxes}\n      required={true}\n    />\n  );\n\n}\n\nexport default CarForm;","import { INITIAL_STATE } from '../constants';\n\nexport const getInitialValues = user => (user ? user : INITIAL_STATE);\n\nexport const getRequestPayload = values => values;","import { useState } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport { MODE } from '../../constants';\nimport CarsTable from './CarsTable';\nimport CarForm from './CarForm';\nimport NotFound from '../NotFound';\n\n\nfunction Cars() {\n  const { path } = useRouteMatch();\n  const [cars, setCars] = useState([]);\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path={path}>\n          <CarsTable cars={cars} setCars={setCars} />\n        </Route>\n\n        <Route exact\n               path={`${path}/car/:mode(${MODE.VIEW}|${MODE.CREATE}|${MODE.EDIT}|${MODE.CLONE}|${MODE.DELETE})/:id?`}>\n          <CarForm cars={cars} setCars={setCars} />\n        </Route>\n\n        <Route path='*'><NotFound /></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Cars;","import { Switch, Redirect, Route, Link } from 'react-router-dom';\nimport './styles.scss';\nimport Users from '../Users';\nimport Cars from '../Cars';\nimport NotFound from '../NotFound';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <nav>\n        <h3>Menu</h3>\n        <ul className={'nav-links'}>\n          <li><Link to='/users'><p>Users</p></Link></li>\n          <li><Link to='/cars'><p>Cars</p></Link></li>\n        </ul>\n      </nav>\n      <Switch>\n        <Redirect exact from='/' to='/users' />\n\n        <Route path='/users'>\n          <Users />\n        </Route>\n        <Route path='/cars'>\n          <Cars />\n        </Route>\n\n        <Route path='*'><NotFound /></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { BrowserRouter as Router } from 'react-router-dom';\n\nfunction Root({ children }) {\n  return (\n    <Router basename='/globallogic-js-basecamp-2021/react/03-react-router-formik/build'>\n      {children}\n    </Router>\n  );\n}\n\nexport default Root;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport Root from './components/Root';\nimport './styles.css';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <StrictMode>\n    <Root>\n      <App />\n    </Root>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}