{"version":3,"sources":["api/utisl.js","components/Store/redux/reducers/reducerTodo.js","api/userApi/index.js","components/Store/redux/reducers/userReducer.js","components/Store/redux/store.js","constants.js","components/Users/constants.js","components/Users/UsersTable/Actions/index.jsx","components/Users/UsersTable/index.jsx","common/Formik/Select/index.jsx","common/Formik/Input/index.jsx","components/Users/UserForm/FormContainer/Buttons/index.jsx","components/Users/UserForm/FormContainer/index.jsx","components/Users/UserForm/index.jsx","components/Users/UserForm/converter.js","components/NotFound/index.jsx","components/Users/index.jsx","components/ToDoList/components/Todos.js","components/ToDoList/components/TodoItem.js","components/ToDoList/components/DisplayTodos.js","components/App/index.jsx","components/Root/index.jsx","index.js"],"names":["initialId","todoReducer","createSlice","name","initialState","reducers","addTodos","state","action","push","payload","removeTodos","filter","todo","id","completeTodos","map","completed","actions","reducerTodo","reducer","wait","ms","Promise","resolve","setTimeout","getTimestamp","date","Date","now","getFullYear","getMonth","0","1","2","3","4","5","6","getDay","getHours","getMinutes","throwError","Error","getId","data","length","api","getUsers","console","log","getUser","user","find","u","createUser","newUser","timestamp","editUser","index","findIndex","deleteUser","splice","getRoles","ROLES","fetchUsers","createAsyncThunk","a","updateUser","fetchRoles","cloneUser","removeUser","usersSlice","list","usersFetched","roles","rolesFetched","extraReducers","builder","addCase","pending","fulfilled","rejected","window","alert","concat","store","configureStore","users","userReducer","middleware","getDefaultMiddleware","logger","MODE","USERNAME","ROLE","AGE","INITIAL_STATE","Actions","url","useRouteMatch","history","useHistory","redirect","mode","className","onClick","UsersTable","displayInfo","dispatch","useDispatch","useSelector","status","useEffect","to","Select","label","value","disabled","validate","useField","field","role","component","Input","type","required","placeholder","Buttons","isSubmitting","useFormikContext","FormContainer","initialValues","onSubmit","trim","UserForm","useParams","Number","handleSubmit","values","error","message","getInitialValues","NotFound","Users","path","useState","setUsers","exact","connect","todos","addTodo","obj","props","setTodo","onChange","e","target","handleTodo","nanoid","item","TodoItem","removeTodo","completeTodo","style","color","App","from","Root","children","basename","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b9cbf6b1.chunk.js","sourcesContent":["export const wait = (ms = 800) =>\n  new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n\nexport const createGetId = initialId => () => ++initialId;\n\nexport const getTimestamp = () => {\n  const days = {\n    0: 'Sunday',\n    1: 'Monday',\n    2: 'Tuesday',\n    3: 'Wednesday',\n    4: 'Thursday',\n    5: 'Friday',\n    6: 'Saturday'\n  };\n  const date = new Date(Date.now());\n  return `${date.getFullYear()}-${date.getMonth() + 1}-${days[date.getDay()]} ${date.getHours()}:${date.getMinutes()}`;\n};\n\nexport const throwError = id => {\n  throw new Error(`Record with ID ${id} does not exist`);\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = [];\n\nconst todoReducer = createSlice({\n  name: 'todolist',\n  initialState,\n  reducers: {\n    addTodos: (state, action) => {\n      state.push(action.payload);\n      return state;\n    },\n    removeTodos: (state ,action)=>\n    {\n      return state.filter(todo=>todo.id !== action.payload)\n    },\n    completeTodos: (state, action) => {\n      return state.map((todo) => {\n        if (todo.id === action.payload) {\n          return {\n            ...todo,\n            completed: true,\n          };\n        }\n        return todo;\n      });\n    }\n\n  }\n});\n\nexport const { addTodos,removeTodos,completeTodos } = todoReducer.actions;\nexport const reducerTodo = todoReducer.reducer;","import { wait, createGetId, getTimestamp, throwError } from '../utisl';\nimport data from './db';\n\nconst getId = createGetId(data.length);\n\nconst api = {\n  // GET /users\n  async getUsers() {\n    await wait(1000);\n\n    console.log('GET /users', data);\n    return data;\n  },\n  // GET /users/:id\n  async getUser(id) {\n    await wait();\n\n    const user = data.find(u => u.id === id);\n\n    if (user) {\n      console.log(`GET /users/${user.id}`, user);\n      return user;\n    } else {\n      throwError(id);\n    }\n  },\n  // POST /users\n  async createUser(user) {\n    await wait();\n\n    const newUser = {\n      ...user,\n      id: getId(),\n      timestamp: getTimestamp()\n\n    };\n\n    data.push(newUser);\n\n    console.log('POST /users', newUser);\n    return newUser;\n  },\n  // PUT /users\n  async editUser(user) {\n    await wait();\n\n    const index = data.findIndex(u => u.id === user.id);\n\n    if (~index) {\n      data[index] = {\n        ...user,\n        timestamp: getTimestamp()\n      };\n\n      console.log('PUT /users', data[index]);\n      return data[index];\n    } else {\n      throwError(user.id);\n    }\n  },\n  // DELETE /users\n  async deleteUser(user) {\n    await wait();\n\n    const index = data.findIndex(u => u.id === user.id);\n\n    if (~index) {\n      console.log('DELETE /users', user);\n      return data.splice(index, 1);\n    } else {\n      throwError(user.id);\n    }\n  },\n  // GET /roles\n  async getRoles() {\n    await wait();\n    const ROLES = ['user', 'super-user', 'admin'];\n\n    console.log('GET /roles', ROLES);\n    return ROLES;\n  }\n};\n\nexport default api;\n","import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\nimport api from \"../../../../api/userApi\";\n\nexport const fetchUsers = createAsyncThunk(\"users/fetch\", async () => {\n  const payload = await api.getUsers();\n  return payload;\n});\n\nexport const getUser = createAsyncThunk(\"users/get\", async (id) => {\n  const payload = await api.getUser(id);\n  return payload;\n});\n\nexport const createUser = createAsyncThunk(\"users/create\", async (user) => {\n  const payload = await api.createUser(user);\n  return payload;\n});\n\nexport const updateUser = createAsyncThunk(\"users/update\", async (user) => {\n  const payload = await api.editUser(user);\n  return payload;\n});\n\nexport const fetchRoles = createAsyncThunk(\"roles/fetch\", async () => {\n  const payload = await api.getRoles();\n  return payload;\n});\n\nexport const cloneUser = createAsyncThunk(\"users/clone\", async (user) => {\n  const payload = await api.editUser(user);\n  return payload;\n});\n\nexport const removeUser = createAsyncThunk(\"users/remove\", async (user) => {\n  const payload = await api.deleteUser(user);\n  return payload;\n});\n\nconst initialState = {\n  list: [],\n  usersFetched: false,\n  roles: [],\n  rolesFetched: false,\n};\n\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n        .addCase(fetchUsers.pending, (state, action) => {\n          state.usersFetched = false;\n        })\n        .addCase(fetchUsers.fulfilled, (state, action) => {\n          state.usersFetched = true;\n          state.list = [...action.payload];\n        })\n        .addCase(fetchUsers.rejected, (state, action) => {\n          state.usersFetched = false;\n          window.alert(`Failed to fetch users`);\n        })\n        .addCase(fetchRoles.pending, (state, action) => {\n          state.rolesFetched = false;\n        })\n        .addCase(fetchRoles.fulfilled, (state, action) => {\n          state.rolesFetched = true;\n          state.roles = state.roles.concat(action.payload);\n        })\n        .addCase(fetchRoles.rejected, (state, action) => {\n          state.rolesFetched = false;\n          window.alert(`Failed to fetch roles`);\n        })\n        .addCase(createUser.pending, (state, action) => {\n          state.usersFetched = false;\n        })\n        .addCase(createUser.fulfilled, (state, action) => {\n          state.usersFetched = true;\n          state.list = state.list.concat(action.payload);\n        })\n        .addCase(createUser.rejected, (state, action) => {\n          window.alert(`Failed to add user`);\n        })\n        .addCase(updateUser.pending, (state, action) => {\n          state.usersFetched = false;\n        })\n        .addCase(updateUser.fulfilled, (state, action) => {\n          state.usersFetched = true;\n          state.list = state.list.map((user) =>\n              user.id === action.payload.id ? action.payload : user\n          );\n        })\n        .addCase(updateUser.rejected, (state, action) => {\n          window.alert(`Failed to add user`);\n        })\n        .addCase(cloneUser.pending, (state, action) => {\n          state.usersFetched = false;\n        })\n        .addCase(cloneUser.fulfilled, (state, action) => {\n          state.usersFetched = true;\n          state.list = state.list.concat(action.payload);\n        })\n        .addCase(cloneUser.rejected, (state, action) => {\n          window.alert(`Failed to clone user`);\n        })\n        .addCase(removeUser.pending, (state, action) => {\n          state.usersFetched = false;\n        })\n        .addCase(removeUser.fulfilled, (state, action) => {\n          state.usersFetched = true;\n          state.list = state.list.filter(\n              (user) => user.id !== action.payload[0].id\n          );\n        })\n        .addCase(removeUser.rejected, (state, action) => {\n          window.alert(`Failed to remove user`);\n        });\n  },\n});\n\nexport const { deleteUser, editUser } = usersSlice.actions;\n\nexport default usersSlice.reducer;","import { configureStore} from \"@reduxjs/toolkit\";\nimport { reducerTodo } from \"./reducers/reducerTodo\";\nimport userReducer from \"./reducers/userReducer\";\nimport { logger } from 'redux-logger/src';\n\nconst store=configureStore({\n    reducer:{\n        users:userReducer,\n        reducerTodo\n    },\n    middleware:  (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n})\nexport default store;","export const MODE = {\n  VIEW: 'view',\n  CREATE: 'create',\n  EDIT: 'edit',\n  CLONE: 'clone',\n  DELETE: 'delete'\n};\n","export const ID = 'id';\nexport const USERNAME = 'username';\nexport const ROLE = 'role';\nexport const TIMESTAMP = 'timestamp';\nexport const AGE = 'age';\n\nexport const INITIAL_STATE = {\n  [USERNAME]: '',\n  [ROLE]: '',\n  [AGE]: 0\n};\n\n","import { useRouteMatch, useHistory } from 'react-router-dom';\nimport './styles.scss';\nimport { MODE } from '../../../../constants';\n\nfunction Actions({ id }) {\n  const { url } = useRouteMatch();\n  const history = useHistory();\n\n  const redirect = mode => () => {\n    history.push(`${url}/user/${mode}/${id}`);\n  };\n\n  return (\n    <div className='Actions'>\n      <button onClick={redirect(MODE.VIEW)} className='viewBtn button'>View</button>\n      {' '}\n      <button onClick={redirect(MODE.EDIT)} className='editBtn button'>Edit</button>\n      {' '}\n      <button onClick={redirect(MODE.CLONE)} className='cloneBtn button'>Clone</button>\n      {' '}\n      <button onClick={redirect(MODE.DELETE)} className='deleteBtn button'>Delete</button>\n    </div>\n  );\n}\n\nexport default Actions;\n","import { useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport {useSelector,useDispatch} from \"react-redux\";\nimport userApi from '../../../api/userApi';\nimport { MODE } from '../../../constants';\nimport { ID, USERNAME, ROLE, TIMESTAMP, AGE } from '../constants';\nimport Actions from './Actions';\nimport './index.scss';\nimport {fetchUsers} from \"../../Store/redux/reducers/userReducer\";\n\nfunction UsersTable() {\n  const { url } = useRouteMatch();\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.users.list);\n  const status = useSelector((state) => state.users.usersFetched);\n\n  useEffect(() => {\n    if (!status) {\n      dispatch(fetchUsers());\n    }\n  }, [status,dispatch]);\n\n  let displayInfo;\n\n  if (!status){\n    displayInfo=<p>Loading...</p>\n  }else if (status){\n    displayInfo=<div>\n      <Link to={`${url}/user/${MODE.CREATE}`}><p className='createBtn'>Create User</p></Link>\n\n      <table>\n        <thead>\n        <tr>\n          <th>ID</th>\n          <th>Username</th>\n          <th>Age</th>\n          <th>Role</th>\n          <th>Last Updated At</th>\n          <th>Actions</th>\n        </tr>\n        </thead>\n        <tbody>\n        {users.map(user => (\n            <tr key={user[ID]}>\n              <td>{user[ID]}</td>\n              <td>{user[USERNAME]}</td>\n              <td>{user[AGE]}</td>\n              <td>{user[ROLE]}</td>\n              <td>{user[TIMESTAMP]}</td>\n              <td>\n                <Actions id={user[ID]} />\n              </td>\n            </tr>\n        ))}\n        </tbody>\n      </table>\n    </div>\n  }\n\n  return (\n    <div className='UsersTable'>\n      {displayInfo}\n    </div>\n  );\n}\n\nexport default UsersTable;\n","import { useField, ErrorMessage } from 'formik';\nimport './styles.scss';\n\nfunction Select({ name, label, value, disabled = false, validate }) {\n  const [field] = useField({ name, validate });\n  return (\n    <div className='select'>\n      <label>\n        <div>{label}</div>\n        <select disabled={disabled} {...field} className='options'>\n          <option />\n          {value.map((role, index) => {\n            return <option key={index}>{role}</option>;\n          })}\n        </select>\n      </label>\n\n      <ErrorMessage name={name} className='error' component='div' />\n    </div>\n  );\n}\n\nexport default Select;","import { useField, ErrorMessage } from 'formik';\nimport './styles.scss';\n\nfunction Input({ name, label, validate, type = 'text', disabled = false, required }) {\n  const [field] = useField({ name, validate });\n\n  return (\n    <div className='Input'>\n      <label>\n        <div>{label}</div>\n        <input type={type} disabled={disabled} {...field} className='info' placeholder={label} />\n      </label>\n\n      <ErrorMessage name={name} className='error' component='div' />\n    </div>\n  );\n}\n\nexport default Input;\n","import { useHistory } from 'react-router-dom';\nimport { useFormikContext } from 'formik';\nimport './buttons.scss';\nimport { MODE } from '../../../../../constants';\n\nfunction Buttons({ mode }) {\n  const history = useHistory();\n  const { isSubmitting } = useFormikContext();\n\n  return (\n    <div>\n      {(mode === MODE.CREATE || mode === MODE.EDIT) && (\n        <button type='submit' disabled={isSubmitting} className='submitBtn'>\n          Save\n        </button>\n      )}\n      {\n        (mode === MODE.CLONE) && (\n          <button type='submit' disabled={isSubmitting} className='submitBtn'>\n            Clone\n          </button>\n        )\n      }\n      {\n        (mode === MODE.DELETE) && (\n          <button type='submit' disabled={isSubmitting} className='submitBtn'>\n            Delete\n          </button>\n        )\n      }\n\n      <button type='button' onClick={() => history.push('/users')} className='submitBtn'>\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default Buttons;\n","import { Formik, Form } from 'formik';\nimport Select from '../../../../common/Formik/Select';\nimport Input from '../../../../common/Formik/Input';\nimport { MODE } from '../../../../constants';\nimport { ROLE, USERNAME, AGE } from '../../constants';\nimport Buttons from './Buttons';\nimport './form.scss';\n\nfunction FormContainer({ initialValues, onSubmit, mode, roles, required }) {\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      <Form>\n        <div className='form'>\n          <Input name={USERNAME} label='Username' disabled={mode === MODE.VIEW || mode === MODE.DELETE} required={required}\n                 validate={value => {\n                   if (value.trim() === '') {\n                     return `Please, enter your name:)`;\n                   }\n                 }}\n          />\n          <Input name={AGE} label='Age' disabled={mode === MODE.VIEW || mode === MODE.DELETE} type='number' required={required}\n                 validate={value => {\n                   if (value <= 15 || value >= 111) {\n                     return `Not allowed age!`;\n                   }\n                 }}\n          />\n          <Select name={ROLE} label='Role' disabled={mode === MODE.VIEW || mode === MODE.DELETE} value={roles}\n                  validate={value => {\n                    if (!value) {\n                      return `Field is required`;\n                    }\n                  }}\n          />\n\n          <br />\n\n          <Buttons mode={mode} />\n        </div>\n      </Form>\n    </Formik>\n  );\n}\n\nexport default FormContainer;\n","import { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n  getUser,\n  fetchRoles,\n  createUser,\n  updateUser,\n  fetchUsers,\n  removeUser\n} from \"../../Store/redux/reducers/userReducer\";\nimport { MODE } from '../../../constants';\nimport { ID } from '../constants';\nimport FormContainer from './FormContainer';\nimport { getInitialValues, getRequestPayload } from './converter';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nfunction UserForm() {\n  const { mode, id } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.users.list);\n  const status = useSelector((state) => state.users.usersFetched);\n  const user = users.find((user) => user.id === Number(id));\n  const roles = useSelector((state) => state.users.roles);\n  const rolesFetched = useSelector((state) => state.users.rolesFetched);\n\n  useEffect(() => {\n    if (mode === MODE.VIEW || mode === MODE.EDIT) {\n      if (!user) {\n       dispatch(getUser(id));\n      }\n    }\n    if (!status)\n    {\n      dispatch(fetchUsers());\n    }\n  }, [id, mode, user, dispatch,status]);\n\n  useEffect(() => {\n   if (mode)\n   {\n     if (!rolesFetched)\n     {\n       dispatch(fetchRoles());\n     }\n   }\n  }, [rolesFetched,dispatch,mode]);\n\n  const handleSubmit = async values => {\n    try {\n      const payload = getRequestPayload(values);\n\n      switch (mode) {\n        case MODE.CREATE:\n          await dispatch(createUser(payload));\n          break;\n        case MODE.EDIT:\n          await dispatch(updateUser(payload));\n          break;\n        case MODE.CLONE:\n          await dispatch(createUser(payload));\n          break;\n        case MODE.DELETE:\n          await dispatch(removeUser(payload));\n          break;\n        default:\n          console.error(`Failed to execute this request for ${mode} mode`);\n      }\n    } catch (err) {\n      window.alert(err.message);\n    }\n\n    history.push('/users');\n  };\n\n  const initialValues = getInitialValues(user);\n\n  return (\n    <FormContainer\n      key={`${mode}:${initialValues[ID]}`}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      mode={mode}\n      roles={roles}\n      required={true}\n    />\n  );\n}\n\nexport default UserForm;\n","import { INITIAL_STATE } from '../constants';\n\nexport const getInitialValues = user => (user ? user : INITIAL_STATE);\n\nexport const getRequestPayload = values => values;","import React from 'react';\nimport './styles.scss';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1>Not Found</h1>\n      <h3>Error 404</h3>\n    </div>\n  );\n}\n\nexport default NotFound;","import { useState } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport { MODE } from '../../constants';\nimport UsersTable from './UsersTable';\nimport UserForm from './UserForm';\nimport NotFound from '../NotFound';\n\nfunction Users() {\n  const { path } = useRouteMatch();\n  const [users, setUsers] = useState([]);\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path={path}>\n          <UsersTable users={users} setUsers={setUsers} />\n        </Route>\n\n        <Route exact\n               path={`${path}/user/:mode(${MODE.VIEW}|${MODE.CREATE}|${MODE.EDIT}|${MODE.CLONE}|${MODE.DELETE})/:id?`}>\n          <UserForm users={users} setUsers={setUsers} />\n        </Route>\n\n        <Route path='*'><NotFound /></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Users;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodos } from '../../Store/redux/reducers/reducerTodo';\nimport { nanoid } from '@reduxjs/toolkit';\nimport '../main.css'\n\nconst mapStateToProps = state => {\n  return {\n    todos: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTodo: obj => dispatch(addTodos(obj))\n  };\n};\n\nconst Todos = (props) => {\n  const [todo, setTodo] = useState('');\n\n  function handleTodo(e) {\n    setTodo(e.target.value);\n  }\n\n  const add = () => {\n    if (todo === '') {\n      alert('Task is empty');\n    } else {\n      props.addTodo({\n        id: nanoid(),\n        item: todo,\n        completed: false\n      });\n      setTodo('');\n    }\n  };\n\n\n  return (\n    <div className='addTodos'>\n      <input type='text' placeholder='Type your to do here' className='input-todo'\n             value={todo}\n             onChange={e => handleTodo(e)}\n      />\n      <br/>\n      <button className='addBtn' onClick={() => add()}>Add</button>\n\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);","import React from 'react';\n\nconst TodoItem = ({ item, removeTodo, completeTodo }) => {\n\n  return (\n    <li key={item.id} className='todoElem'>\n      <p>{item.item}</p>\n      <div className='buttons'>\n        {item.completed === false && (\n          <button\n            style={{ color: 'green' }}\n            onClick={() => completeTodo(item.id)}\n            className='optionBtn'\n          >\n            Done\n          </button>\n        )}\n        {\n          item.completed === true && (\n            <span>✅</span>\n          )}\n        <button\n          style={{ color: 'red' }}\n          onClick={() => removeTodo(item.id)}\n          className='optionBtn'\n        >\n          Remove\n        </button>\n      </div>\n\n    </li>\n  );\n};\n\nexport default TodoItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addTodos, removeTodos, completeTodos } from '../../Store/redux/reducers/reducerTodo';\nimport TodoItem from './TodoItem';\nimport '../main.css'\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: state.reducerTodo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTodo: (obj) => dispatch(addTodos(obj)),\n    removeTodo: (id) => dispatch(removeTodos(id)),\n    completeTodo: (id) => dispatch(completeTodos(id))\n  };\n};\n\nconst DisplayTodos = props => {\n\n  return (\n    <div className='displayTodos'>\n      <ul className='todoList'>\n        {props.todos.length > 0\n          ? props.todos.map((item) => {\n            return (\n              <TodoItem\n                key={item.id}\n                item={item}\n                removeTodo={props.removeTodo}\n                completeTodo={props.completeTodo}\n              />\n            );\n          })\n          : null}\n\n      </ul>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTodos);\n\n","import { Switch, Redirect, Route, Link } from 'react-router-dom';\nimport './styles.scss';\nimport Users from '../Users';\nimport NotFound from '../NotFound';\nimport Todos from '../ToDoList/components/Todos';\nimport DisplayTodos from '../ToDoList/components/DisplayTodos';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <nav>\n        <h3>Menu</h3>\n        <ul className={'nav-links'}>\n          <li><Link to='/users'><p>Users</p></Link></li>\n          <li><Link to='/todolist'><p>To do list</p></Link></li>\n        </ul>\n      </nav>\n      <Switch>\n        <Redirect exact from='/' to='/users' />\n\n        <Route path='/users'>\n          <Users />\n        </Route>\n        <Route path='/todolist'>\n         <div className='todoDiv'>\n           <Todos />\n         </div>\n         <div className='todosDiv'>\n           <DisplayTodos/>\n         </div>\n        </Route>\n\n        <Route path='*'><NotFound /></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { BrowserRouter as Router } from 'react-router-dom';\n\nfunction Root({ children }) {\n  return (\n    <Router basename='/globallogic-js-basecamp-2021/react/04-redux/build'>\n      {children}\n    </Router>\n  );\n}\n\nexport default Root;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from './components/Store/redux/store';\n\nimport App from './components/App';\nimport Root from './components/Root';\nimport './styles.css';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <StrictMode>\n    <Root>\n      <Provider store={store}>\n      <App />\n      </Provider>\n    </Root>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}