{"version":3,"sources":["components/Square/Square.js","components/Board/Board.js","components/Game/Game.js","index.js"],"names":["Square","value","onClick","key","className","Board","squares","onHandleClick","Array","keys","map","row","cell","i","Game","status","useState","fill","latestMove","history","setHistory","stepNumber","setStepNumber","isStraight","setIsStraight","moves","slice","current","winner","calculateWinner","draw","steps","step","move","Math","floor","col","desc","jumpTo","reverse","currentMove","length","counterHorizontal","iterations","counter","print","cells","pop","concat","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a21f1f1.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport './Square.css'\n\nexport default function Square({value, onClick, key}) {\n    return (\n        <button className=\"square\" onClick={onClick} key={key}>\n            {value}\n        </button>\n    );\n}","import React from \"react\";\nimport Square from \"../Square/Square\";\n\nexport default function Board({squares, onHandleClick}) {\n\n    function renderSquare(i) {\n        return <Square value={squares[i]} onClick={() => onHandleClick(i)} key={i}/>;\n    }\n    const rows = 19;\n    const cells = 19;\n\n    return (\n        <div>\n            {[...Array(rows).keys()].map(row => (\n                <div className=\"board-row\" key={row}>\n                    {[...Array(cells).keys()].map(cell => renderSquare(row * cells + cell))}\n                </div>\n            ))}\n        </div>\n    );\n}","import './Game.css';\nimport React, {useState} from \"react\";\nimport Board from \"../Board/Board\";\n\nexport default function Game() {\n\n    const [history, setHistory] = useState([{squares: Array(361).fill(null), latestMove: null}]);\n\n    const [stepNumber, setStepNumber] = useState(0);\n    const [isStraight, setIsStraight] = useState(true);\n\n    const moves = history.slice(0, stepNumber + 1);\n    const current = moves[stepNumber];\n\n\n\n    const winner = calculateWinner(current.squares);\n    let status;\n\n    if (winner.winner) {\n        status = `Winner: ${winner.winner}`\n    } else if (winner.draw) {\n        status = `It's a Draw`;\n    } else {\n        status = `Next player: ${stepNumber % 2 === 0 ? '游릭' : '游댮'}`\n    }\n\n    const steps = moves.map((step, move) => {\n\n        const row = 1 + Math.floor(step.latestMove / 19);\n        const col = 1 + step.latestMove % 19;\n\n        const desc = move ?\n            \"Move \"+move +`(Row: ${row}  Col: ${col})` :\n            'Restart';\n        return (\n            <li key={move}>\n                <button className={move === stepNumber ? 'move-list-item-selected buttons' : 'buttons'}\n                        onClick={() => jumpTo(move)}>{desc}</button>\n            </li>\n        );\n    });\n\n    if (!isStraight) {\n        steps.reverse();\n    }\n\n    const handleClick = (i) => {\n        const cells = current.squares.slice();\n        const lastMove = history.slice(0, stepNumber + 1);\n        if (calculateWinner(cells, lastMove.pop()).winner || cells[i]) {\n            return;\n        }\n\n        cells[i] = (stepNumber % 2 === 0) ? '游릭' : '游댮';\n        setHistory(moves.concat([{squares: cells, latestMove: i}]));\n        setStepNumber(moves.length);\n    }\n\n    function jumpTo(step) {\n        setStepNumber(step);\n    }\n    function calculateWinner(squares) {\n\n        let currentMove = moves[moves.length - 1].latestMove;\n\n        let counterHorizontal = 1;\n        let iterations = 0;\n\n        let counter = 1;\n\n        for (let i = currentMove - 1; i >= 0; i--) {\n            iterations++;\n            if (iterations > 4) break;\n            if (squares[i] === squares[currentMove] && typeof squares[currentMove] !== 'undefined' && typeof squares[i] !== 'undefined') {\n                counterHorizontal++;\n\n                if (counterHorizontal === 5) {\n                    return {\n                        winner: squares[currentMove],\n                        draw: false\n                    };\n                }\n            }\n        }\n\n        iterations = 0;\n\n        for (let i = currentMove + 1; i < squares.length; i++) {\n            iterations++;\n            if (iterations > 4) break;\n            if (squares[i] === squares[currentMove] && typeof squares[currentMove] !== 'undefined' && typeof squares[i] !== 'undefined') {\n                counterHorizontal++;\n                if (counterHorizontal === 5) {\n                    return {\n                        winner: squares[currentMove],\n                        draw: false\n                    };\n                }\n            }\n        }\n\n        counter = 1;\n        iterations = 0;\n\n        for (let i = currentMove - 19; i >= 0; i -= 19) {\n            iterations++;\n            if (iterations > 4) break;\n            if (squares[i] === squares[currentMove] && typeof squares[currentMove] !== 'undefined' && typeof squares[i] !== 'undefined') {\n\n                counter = counter + 1;\n                if (counter === 5) {\n                    squares[currentMove]='游리';\n                    return {\n                        winner: squares[currentMove],\n                        draw: false\n                    };\n                }\n            }\n        }\n\n        counter = 1;\n        iterations = 0;\n\n        for (let i = currentMove + 19; i < squares.length; i += 19) {\n            iterations++;\n            if (iterations > 4) break;\n            if (squares[i] === squares[currentMove] && typeof squares[currentMove] !== 'undefined' && typeof squares[i] !== 'undefined') {\n\n                counter = counter + 1;\n                if (counter === 5) {\n                    squares[currentMove]='游리';\n                    return {\n                        winner: squares[currentMove],\n                        draw: false\n                    };\n                }\n            }\n        }\n\n        counter = 1;\n        iterations = 0;\n\n        for (let i = currentMove - 18; i >= 0; i -= 18) {\n            iterations++;\n            if (iterations > 4) break;\n            if (squares[i] === squares[currentMove] && typeof squares[currentMove] !== 'undefined' && typeof squares[i] !== 'undefined') {\n\n                counter = counter + 1;\n                if (counter === 5) {\n                    squares[currentMove]='游리';\n                    return {\n                        winner: squares[currentMove],\n                        draw: false\n                    };\n                }\n            }\n        }\n\n        counter = 1;\n        iterations = 0;\n\n        for (let i = currentMove + 18; i < squares.length; i += 18) {\n            iterations++;\n            if (iterations > 4) break;\n            if (squares[i] === squares[currentMove] && typeof squares[currentMove] !== 'undefined' && typeof squares[i] !== 'undefined') {\n\n                counter = counter + 1;\n                if (counter === 5) {\n                    squares[currentMove]='游리';\n                    return {\n                        winner: squares[currentMove],\n                        draw: false\n                    };\n                }\n            }\n        }\n\n        counter = 1;\n        iterations = 0;\n\n        for (let i = currentMove - 20; i >= 0; i -= 20) {\n            iterations++;\n            if (iterations > 4) break;\n            if (squares[i] === squares[currentMove] && typeof squares[currentMove] !== 'undefined' && typeof squares[i] !== 'undefined') {\n\n                counter = counter + 1;\n                if (counter === 5) {\n                    squares[currentMove]='游리';\n                    return {\n                        winner: squares[currentMove],\n                        draw: false\n                    };\n                }\n            }\n        }\n\n        counter = 1;\n        iterations = 0;\n\n        for (let i = currentMove + 20; i < squares.length; i += 20) {\n            iterations++;\n            if (iterations > 4) break;\n            if (squares[i] === squares[currentMove] && typeof squares[currentMove] !== 'undefined' && typeof squares[i] !== 'undefined') {\n\n                counter = counter + 1;\n                if (counter === 5) {\n                    return {\n                        winner: squares[currentMove],\n                        draw: false\n                    };\n                }\n            }\n        }\n\n        let print = true;\n\n        for (let i = 0; i < squares.length; i++) {\n            if (squares[i] === null) {\n                print = false;\n                break;\n            }\n        }\n\n        return {\n            winner: null,\n            draw: print,\n        };\n\n    }\n\n    return (\n        <div className=\"game\">\n            <div className=\"game-board\">\n                <Board squares={current.squares} onHandleClick={(i) => handleClick(i)}/>\n            </div>\n            <div className=\"game-info\">\n                <div>{status}</div>\n                <button onClick={() => setIsStraight(!isStraight)} className={'buttons'}>\n                    {isStraight ? 'Straight' : 'Reverse'}\n                </button>\n                <ol>{steps}</ol>\n            </div>\n        </div>\n    );\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from \"./components/Game/Game\";\n\n// import reportWebVitals from './reportWebVitals';\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\nReactDOM.render(\n    <Game/>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}