{"version":3,"sources":["university.js","user.js","student.js","worker.js","main.js"],"names":["University","name","city","zipCode","test","length","_name","_city","TypeError","_zipCode","toUpperCase","value","User","surname","bDate","_surname","Date","getFullYear","Error","_bDate","Student","year","university","_year","_university","bool","counter","Worker","rate","days","retired","_days","_retired","isRetired","_count","lp","console","log","getAddress","user1","getFullName","getFullInfo","student1","getCourse","isFinished","getCounter","worker","getSalary"],"mappings":"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","file":"main.e5f7b067.js","sourceRoot":"..","sourcesContent":["export default class University\n{\n    constructor(name,city,zipCode)\n    {\n       if (/^[A-Za-z -]+$/.test(name) && name.length<129) {\n           this._name=name;\n       }else\n       {\n           this._name=\"\";\n       }\n\n        this._city=city;\n        if (typeof zipCode !==\"number\" || zipCode>99999) {\n           throw TypeError(\"Enter only numbers\");\n        }\n        else\n        {\n            this._zipCode=zipCode;\n        }\n    }\n    getAddress()\n    {\n        return ` \"${this._name}\"-${this._city.toUpperCase()}, ${this._zipCode}`;\n    }\n    get name()\n    {\n        return this._name;\n    }\n    get city()\n    {\n        return this._city;\n    }\n    get zipCode()\n    {\n        return this._zipCode;\n    }\n\n    set name(value)\n    {\n        this._name=value;\n    }\n    set city(value)\n    {\n        this._city=value;\n    }\n    set zipCode(value)\n    {\n        this._zipCode=value\n    }\n}","export default class User\n{\n    constructor(name,surname,bDate)\n    {\n        if (/^[A-Za-z -]+$/.test(name) && name.length<33) {\n            this._name=name;\n        }else\n        {\n            this._name=\"\";\n        }\n \n        if (/^[A-Za-z -]+$/.test(surname) && surname.length<65) {\n            this._surname=surname;\n        }else\n        {\n            this._surname=\"\";\n        }\n        if (bDate<1900 || bDate>new Date().getFullYear()) {\n            throw Error(\"Your birthday date is wrong\");\n        }else{\n         this._bDate=bDate;\n        }\n    }\n\n    get name()\n    {\n        return this._name;\n    }\n    get surname()\n    {\n        return this._surname;\n    }\n    get bDate()\n    {\n        return this._bDate;\n    }\n    set name(value)\n    {\n        this._name=value;\n    }\n    set surname(value)\n    {\n        this._surname=value;\n    }\n    set bDate(value)\n    {\n        this._bDate=value;\n    }\n\n    getFullName()\n    {\n        return `${this._name} ${this._surname}`;\n    }\n    getFullInfo()\n    {\n        return `${this._name} ${this._surname}, ${this._bDate}`;\n    }\n}","import  User  from \"./user.js\";\nimport University from \"./university.js\";\nexport default class Student extends User\n{\n  constructor(_name,_surname,_bDate,year=1900, university)\n  {\n      super(_name,_surname,_bDate);\n      if (year<1900 || year>new Date().getFullYear()) {\n        throw Error(\"Year is wrong\");\n    }else{\n     this._year=year;\n    }\n    if(university instanceof University){\n      this._university=university.name;   \n    }\n  }\n static counter=0;\n  static getCounter()\n  {\n     \n        return  ++this.counter;\n  }\n\n  get year()\n  {\n      return this._year;\n  }\n  get university()\n  {\n      return this._university;\n  }\n\n  set university(value)\n  {\n      this._university=value;\n  }\n  set year(value)\n  {\n      this._year=value;\n  }\n\n  getCourse()\n  {\n      return new Date().getFullYear()-this._year;\n  }\n  isFinished()\n  {\n      let bool;\n    new Date().getFullYear-this._year?bool=true:bool=false;\n    return bool;\n  }\n   getFullInfo()\n   {\n    return `${this._name} ${this._surname}, ${this._bDate}, ${this._year}, ${this._university}`;\n   }\n\n}","import  User  from \"./user.js\";\n\nexport default class Worker extends User\n{\n    constructor(_name,_surname,_bDate,rate,days,retired=false)\n  {\n      super(_name,_surname,_bDate);\n     /^\\d+$/.test(rate)?this.rate=rate:this.rate=0;\n    /^\\d+$/.test(days)?this._days=days:this._days=0;\n     this._retired=retired;\n  }\n  static getCounter()\n  {\n      _count=0;\n      return function () {\n          ++_count;\n      }\n  }\n  get getRate()\n  {\n      return this.rate;\n  }\n  get days()\n  {\n      return this._days;\n  }\n  set setRate(value)\n  {\n      this.rate=value;\n  }\n  set days(value)\n  {\n      this._days=value;\n  }\n  get retired()\n  {\n      return this._retired;\n  }\n  set retired(value)\n  {\n      this._retired=value;\n  }\n\n  isRetired()\n  {\n      return this.retired;\n  }\n  getSalary()\n  {\n      if (this.isRetired()) {\n          return 0;\n      }else\n      {\n          return this.rate*this._days;\n      }\n  }\n}","import  University  from \"./university.js\";\nimport User from \"./user.js\";\nimport Student from \"./student.js\";\nimport Worker from \"./worker.js\";\n\nconst lp =new University('National University Lviv Polytechnic','Lviv',79000);\n console.log(lp.getAddress());\n\nconst user1 =new User('Misha','Savchak',1991);\n console.log(user1.getFullName());\n console.log(user1.getFullInfo());\n\n\nconst student1 =new Student('Misha','Savchak',1991,2014, lp );\n console.log(student1.getCourse());\n console.log(student1.isFinished());\n console.log(Student.getCounter());\n console.log(student1.getFullInfo())\n\nconst worker =new Worker('Misha','Savchak',1991,20,34);\nconsole.log(worker.getFullName());\nconsole.log(worker.isRetired());\nconsole.log(worker.getSalary());\nconsole.log(worker.days);\nconsole.log(worker.rate);\nworker.retired=true;\nconsole.log(worker.getSalary());"]}